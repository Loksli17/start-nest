{
  "version": 3,
  "sources": ["../../@formkit/themes/dist/index.mjs"],
  "sourcesContent": ["/**\n * A function to generate FormKit class functions from a javascript object\n * @param classes - An object of input types with nested objects of sectionKeys and class lists\n * @returns FormKitClassFunctions\n * @public\n */\nfunction generateClasses(classes) {\n    const classesBySectionKey = {};\n    Object.keys(classes).forEach((type) => {\n        Object.keys(classes[type]).forEach((sectionKey) => {\n            if (!classesBySectionKey[sectionKey]) {\n                classesBySectionKey[sectionKey] = {\n                    [type]: classes[type][sectionKey],\n                };\n            }\n            else {\n                classesBySectionKey[sectionKey][type] = classes[type][sectionKey];\n            }\n        });\n    });\n    Object.keys(classesBySectionKey).forEach((sectionKey) => {\n        const classesObject = classesBySectionKey[sectionKey];\n        classesBySectionKey[sectionKey] = function (node, sectionKey) {\n            return addClassesBySection(node, sectionKey, classesObject);\n        };\n    });\n    return classesBySectionKey;\n}\n/**\n * Updates a class list for a given sectionKey\n * @param node - the FormKit node being operated on\n * @param sectionKey - The section key to which the class list will be applied\n * @param classByType - Object containing mappings of class lists to section keys\n * @returns\n * @public\n */\nfunction addClassesBySection(node, _sectionKey, classesByType) {\n    const type = node.props.type;\n    let classList = '';\n    if (classesByType.global) {\n        classList += classesByType.global + ' ';\n    }\n    if (classesByType[type]) {\n        classList += classesByType[type];\n    }\n    const listParts = classList.split('$reset');\n    if (listParts.length > 1) {\n        return `$reset ${listParts[listParts.length - 1].trim()}`;\n    }\n    return listParts[0].trim();\n}\n\nexport { generateClasses };\n"],
  "mappings": ";;;AAMA,yBAAyB,SAAS;AAC9B,QAAM,sBAAsB,CAAC;AAC7B,SAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,SAAS;AACnC,WAAO,KAAK,QAAQ,KAAK,EAAE,QAAQ,CAAC,eAAe;AAC/C,UAAI,CAAC,oBAAoB,aAAa;AAClC,4BAAoB,cAAc;AAAA,WAC7B,OAAO,QAAQ,MAAM;AAAA,QAC1B;AAAA,MACJ,OACK;AACD,4BAAoB,YAAY,QAAQ,QAAQ,MAAM;AAAA,MAC1D;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,SAAO,KAAK,mBAAmB,EAAE,QAAQ,CAAC,eAAe;AACrD,UAAM,gBAAgB,oBAAoB;AAC1C,wBAAoB,cAAc,SAAU,MAAM,aAAY;AAC1D,aAAO,oBAAoB,MAAM,aAAY,aAAa;AAAA,IAC9D;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AASA,6BAA6B,MAAM,aAAa,eAAe;AAC3D,QAAM,OAAO,KAAK,MAAM;AACxB,MAAI,YAAY;AAChB,MAAI,cAAc,QAAQ;AACtB,iBAAa,cAAc,SAAS;AAAA,EACxC;AACA,MAAI,cAAc,OAAO;AACrB,iBAAa,cAAc;AAAA,EAC/B;AACA,QAAM,YAAY,UAAU,MAAM,QAAQ;AAC1C,MAAI,UAAU,SAAS,GAAG;AACtB,WAAO,UAAU,UAAU,UAAU,SAAS,GAAG,KAAK;AAAA,EAC1D;AACA,SAAO,UAAU,GAAG,KAAK;AAC7B;",
  "names": []
}
